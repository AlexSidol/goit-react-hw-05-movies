{"version":3,"file":"static/js/913.1c68aad9.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.jsx","services/apiMDB.jsx","services/useHooks.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage.module.css?fc1d"],"sourcesContent":["import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useMovieDetails } from '../services/useHooks';\nimport css from '../pages/HomePage.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { getImg } from '../services/apiMDB';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  if (!movieDetails) return <Loader />;\n\n  const { original_title, title, vote_average, overview, genres, poster_path } =\n    movieDetails;\n\n  // const posterSrc = poster_path\n  //   ? `https://image.tmdb.org/t/p/w500${poster_path}`\n  //   : `https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png`;\n\n  const voteValue = vote_average\n    ? Math.fround(vote_average * 10).toFixed(0)\n    : '';\n\n  const genresName = genres ? genres.map(genre => genre.name).join(' ') : '';\n\n  return (\n    <section>\n      <Link className={css.go__back} to={backLinkHref}>\n        Go back ðŸ‘ˆ\n      </Link>\n      <div className={css.movie__wrapper}>\n        <img src={getImg(poster_path)} alt={original_title} />\n\n        <div>\n          <h2>{title}</h2>\n\n          <p>\n            User Score:\n            {voteValue}%\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n\n          <h2>Genres</h2>\n          <p>{genresName}</p>\n\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link\n                state={{ from: backLinkHref }}\n                className={css.link}\n                to=\"cast\"\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                state={{ from: backLinkHref }}\n                className={css.link}\n                to=\"reviews\"\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <Outlet />\n    </section>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=fd58d78770f5e002deebabf4164f4fc6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getImg = src => {\n  return src\n    ? `https://image.tmdb.org/t/p/w500${src}`\n    : `https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png`;\n};\n","import * as API from '../services/apiMDB';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(ret => setMovies(ret));\n  }, []);\n\n  return { trendingMovies };\n};\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(ret => setMovieDetails(ret));\n  }, [movieId]);\n\n  return { movieDetails };\n};\n\nexport const useMovieCredits = movieId => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(ret => setMovieCredits(ret));\n  }, [movieId]);\n  return { movieCredits };\n};\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMoviesReviews(movieId).then(ret => setReviews(ret));\n  }, [movieId]);\n  return { movieReviews };\n};\n\nexport const useSearchMovies = input => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.searchMovies(input).then(ret => setMovies(ret));\n  }, [input]);\n  return { movies };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"top\":\"HomePage_top__hJ9i5\",\"search__blok\":\"HomePage_search__blok__fTw9U\",\"movie__wrapper\":\"HomePage_movie__wrapper__JZ94-\",\"link\":\"HomePage_link__UCsQr\",\"go__back\":\"HomePage_go__back__SXXz7\"};"],"names":["movieId","useParams","movieDetails","useMovieDetails","backLinkHref","useLocation","state","from","original_title","title","vote_average","overview","genres","poster_path","voteValue","Math","fround","toFixed","genresName","map","genre","name","join","className","css","to","src","getImg","alt","axios","API_KEY","getTrending","response","data","results","id","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","character","profile_path","getMoviesReviews","author","content","useTrendingList","useState","trendingMovies","setMovies","useEffect","API","then","ret","setMovieDetails","useMovieCredits","movieCredits","setMovieCredits","useMovieReviews","movieReviews","setReviews"],"sourceRoot":""}